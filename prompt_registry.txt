            prompt = """
            Generate a Python script based on the following API documentation:
            
            {api_docs}
            
            The script must:
            1. Use the current weather data endpoint from the API docs above
            2. Have only two core functions:
            - call_bedrock(): to process user queries
            - get_weather(): to fetch weather data
            3. Use this exact code structure for the Bedrock call:
            
            import boto3
            import requests
            import json
            import os
            from dotenv import load_dotenv

            load_dotenv()
            api_key = os.getenv("OPENWEATHERMAP_API_KEY")
            def call_bedrock(prompt: str):
                bedrock_client = boto3.client("bedrock-runtime", region_name="us-east-1")
                payload = {{
                    "anthropic_version": "bedrock-2023-05-31",
                    "max_tokens": 1000,
                    "messages": [
                        {{
                            "role": "user",
                            "content": prompt
                        }}
                    ]
                }}

                response = bedrock_client.invoke_model(
                    body=json.dumps(payload),
                    modelId="anthropic.claude-3-sonnet-20240229-v1:0",
                    contentType="application/json",
                    accept="application/json"
                )
                
                response_body = json.loads(response['body'].read())
                return response_body['content'][0]['text']

            4. The get_weather() function must:
            - Extract the API endpoint and parameters from the API docs above
            - Take a city name as input
            - Use os.getenv("OPENWEATHER_API_KEY") for the API key
            - Return temperature in Celsius and weather description
            - Handle errors gracefully
            
            5. The main section should:
            - Ask for user input about weather
            - Extract city name from Claude's response
            - Call get_weather() with the city
            - Give this weather data to the agent and generate a natural language response
            
            Generate only the complete, executable Python code with no explanations or comments.
            IMPORTANT: Use only ASCII characters in all string outputs. 
            Do not use special characters like degree symbols (Â°) or other Unicode characters. Use 'C' for Celsius.
            """.format(api_docs=api_docs)
